name: Test WasmEdge on OpenWrt

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on: workflow_dispatch

jobs:
  # TODO: Refactor `lint` with `on.workflow_run`
  # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow
  lint:
    uses: ./.github/workflows/reusable-call-linter.yml

  build_openwrt:
    name: OpenWrt
    needs: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install dependency
      run: |
        git clone https://github.com/openwrt/openwrt.git ../openwrt
        cd ../openwrt
        git checkout 9dc86d19628f55bfed2048c412c5b23bda328cff
    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
        df -h
    - name: Update feeds
      run: |
        cd ../openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Make WasmEdge Package for benchmark
      run: |
        cd ../
        mkdir -p ./openwrt/package/utils/WasmEdge
        cp -r ./WasmEdge ./openwrt/package/utils/WasmEdge/src
        cp ./WasmEdge/utils/openwrt/configuration/Makefile ./openwrt/package/utils/WasmEdge/
        cd ./openwrt
        ls ./
        make menuconfig
    - name: Pack OpenWrt images and WasmEdge ipk
      run: |
        cp -rf $(find ../openwrt/bin/ -type f -name "openwrt-x86-64-generic-rootfs.tar.gz") ./
    - name: Upload artifact (v2)
      uses: actions/upload-artifact@v3
      with:
        name: openwrt-rootfs
        path: ./openwrt-x86-64-generic-rootfs.tar.gz

  build_openwrt_docker:
    name: OpenWrt-docker
    runs-on: ubuntu-latest
    needs: build_openwrt
    steps:
    - name: Download image
      uses: actions/download-artifact@v3
      with:
        name: openwrt-rootfs
        path: ./
    - name: make_openwrt_docker
      run: |
        mkdir -p ./openwrt-docker
        cp openwrt-x86-64-generic-rootfs.tar.gz ./openwrt-docker/
        cd openwrt-docker

        touch ./Dockerfile
        cat >> ./Dockerfile <<EOF
        FROM scratch
        ADD openwrt-x86-64-generic-rootfs.tar.gz /
        EXPOSE 22 80 443
        ENTRYPOINT ["/sbin/init"]
        EOF

        ls ./
        docker build -t openwrt .
        docker run --name openwrt -d --privileged openwrt:latest /sbin/init
        docker exec openwrt wasmedge -v

